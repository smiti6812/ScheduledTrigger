name: My inputs

on:
  push:   
  workflow_dispatch:
    inputs:
      targetPlatform:
        type: choice
        description: Target platform
        default: x64
        options:
          - x64         
          - x86

 
env:
  configuration: Release
  targetPlatform: ${{github.event.inputs.targetPlatform == '' && 'x64' || github.event.inputs.targetPlatform }}
  
jobs:  
  initialize_params:  
    runs-on: windows-latest
    outputs:
      simCoreExtenSionUnitTestPath: ${{ steps.buildparampaths.outputs.simCoreExtenSionUnitTestPat}}
      simCoreExtensionSearchDir: ${{ steps.buildparampaths.outputs.simCoreExtensionSearchDir }}
      crashManagementUnitTestPath: ${{ steps.buildparampaths.outputs.crashManagementUnitTestPath }}
      crashManagementSearchDir: ${{ steps.buildparampaths.outputs.crashManagementSearchDir }}
      simulationWrapperUnitTestPath: ${{ steps.buildparampaths.outputs.simulationWrapperUnitTestPath }}
      simulationWrapperSearchDir: ${{ steps.buildparampaths.outputs.simulationWrapperSearchDir }}
      installerName: ${{steps.buildparampaths.outputs.installerName }}
      targetBaseFolder: ${{ steps.buildparampaths.outputs.targetBaseFolder }}   
    steps:
      - name: Checkout current repo
        uses: actions/checkout@v3
      - name: Initialize platform related params
        id: buildparampaths
        uses: ./.github/workflows/Actions/
        with:
          platform: ${{ env.targetPlatform }}
  greet:
    continue-on-error: true
    needs: initialize_params
    runs-on: windows-latest
    steps:
      - name: Checkout current repo
        uses: actions/checkout@v3
      - name: Send greeting
        run: |
          echo "${{ github.event.inputs.targetPlatform }}"
          echo "${{ env.targetPlatform }}"
      - name: Create an error
        id: createError
        run: $result = 1/0
        shell: powershell
      - name: Check Create an error step
        id: checkerror1
        run: |
            ErrorCheck "${{ steps.createError.outcome }}"
            echo "Create an error step was ${{ steps.checkerror1.errorMessage }}"
        shell: powershell    
      - name: Call initialize parameters
        id: buildparampaths  
        uses: ./.github/workflows/Actions/
        with:
          platform: ${{ env.targetPlatform }}
      - name : Display platform info
        run: ./.github/workflows/bin/displayPlatform.ps1 ${{ env.targetPlatform }}
        shell: powershell
      - name: Print parameters
        id: printbuildparampaths
        run: |
         echo "Configuration: ${{ env.configuration }}"
          echo "${{needs.initialize_params.outputs.simCoreExtenSionUnitTestPath}}"
          echo "${{needs.initialize_params.outputs.simCoreExtensionSearchDir}}"
          echo "${{needs.initialize_params.outputs.crashManagementUnitTestPath}}"
          echo "${{needs.initialize_paramss.outputs.crashManagementSearchDir}}"
          echo "${{needs.initialize_params.outputs.simulationWrapperUnitTestPath}}"
          echo "${{needs.initialize_params.outputs.simulationWrapperSearchDir}}"
          echo "${{needs.initialize_params.outputs.installerName}}"
          echo "${{needs.initialize_params.outputs.targetBaseFolder}}"
        shell: powershell
